package com.javarush.task.task21.task2106;

import java.util.Date;
import java.util.HashSet;
import java.util.Objects;

/* 
Ошибка в equals/hashCode
*/

public class Solution {
    private int anInt;
    private String string;
    private double aDouble;
    private Date date;
    private Solution solution;

    public Solution(int anInt, String string, double aDouble, Date date, Solution solution) {
        this.anInt = anInt;
        this.string = string;
        this.aDouble = aDouble;
        this.date = date;
        this.solution = solution;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Solution)) return false;

        Solution solution1 = (Solution) o;

        if (Double.compare(solution1.aDouble, aDouble) != 0) return false;
        if (anInt != solution1.anInt) return false;
        if (date != null ? !date.equals(solution1.date) : solution1.date != null) return false;
        if (solution != null ? !solution.equals(solution1.solution) : solution1.solution != null) return false;
        if (string != null ? !string.equals(solution1.string) : solution1.string != null) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result;
        long temp;
        result = anInt;
        temp = aDouble != +0.0d ? Double.doubleToLongBits(aDouble) : 0L;
        result = 31 * result + (int) (temp ^ (temp >>> 32));
        result = 31 * result + (solution != null ? solution.hashCode() : 0);
        return result;
    }

// IntelliJ IDEA autogenerated methods
//    @Override
//    public boolean equals(Object o) {
//        if (this == o) return true;
//        if (o == null || getClass() != o.getClass()) return false;
//        Solution solution1 = (Solution) o;
//        return anInt == solution1.anInt &&
//                Double.compare(solution1.aDouble, aDouble) == 0 &&
//                Objects.equals(string, solution1.string) &&
//                Objects.equals(date, solution1.date) &&
//                Objects.equals(solution, solution1.solution);
//    }
//
//    @Override
//    public int hashCode() {
//        return Objects.hash(anInt, string, aDouble, date, solution);
//    }

    public static void main(String[] args) {
        Date date = new Date();
        Solution child1 = new Solution(12, "asd", 12, date, null);
        Solution child2 = new Solution(12, "asd", 12, date, null);
        Solution child3 = new Solution(123, "asd3", 123, date, null);
        Solution parent1 = new Solution(12, "asd", 12, date, child1);
        Solution parent2 = new Solution(12, "asd", 12, date, child1);
        Solution parent3 = new Solution(123, "asd3", 123, date, child2);

        System.out.println(child1.equals(child1) + " child1 and child1. Must be true");
        System.out.println(child1.equals(child2) + " child1 and child2. Must be true");
        System.out.println(child1.equals(child3) + " child1 and child3. Must be false");
        System.out.println(parent1.equals(parent1) + " parent1 and parent1. Must be true");
        System.out.println(parent1.equals(parent2) + " parent1 and parent2. Must be true");
        System.out.println(parent1.equals(parent3) + " parent1 and parent3. Must be false");
        System.out.println();
        HashSet<Solution> hashSet = new HashSet<>();
        hashSet.add(child1);
        System.out.println(hashSet.contains(child1));
        System.out.println(hashSet.contains(child2));
    }
}
